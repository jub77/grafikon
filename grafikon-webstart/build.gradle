plugins {
	id 'base'
}

configurations {
	runtime
}

dependencies {
	runtime project(':grafikon-start')
}

ext {
	webstartDir = "${buildDir}/dist/grafikon-${scmVersion.shortVersion}"
	jnlpVersion = project.findProperty('jnlp.version')
			?: scmVersion.snapshot ? 'dev' : version.replaceAll("(\\d+)\\.(\\d+).*", "\$1.\$2")
}

task copyWebstart(type: Copy) {
	def jnlpDir = "${projectDir}/src/main/jnlp"
	from configurations.runtime
	from (jnlpDir) {
		include '*.jnlp'
		expand([jnlpVersion: jnlpVersion, configuration: configurations.runtime])
	}
	from (jnlpDir) {
		include '*.png', '*.gif'
	}
	into webstartDir
	doFirst {
		def force = project.findProperty("forceWebstart") != null
		if (scmVersion.dirty && !force) {
			throw new GradleException("Creating of distribution from not clean working directory forbidden!")
		}
	}
}

task webstart(dependsOn: copyWebstart) {
	doLast {
		def files = fileTree dir: webstartDir, include: '*.jar'
		files.each { signedFile ->
			ant.signjar(
				jar: signedFile,
				alias: 'jub',
				keystore: "${projectDir}/src/main/keystore/grafikon.ks",
				storepass: 'grafikon',
				preservelastmodified: true,
				lazy: true,
				sigalg: 'SHA1withDSA',
				digestalg: 'SHA1'
			)
		}
	}
}
