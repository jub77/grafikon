plugins {
	id 'org.beryx.runtime'
	id 'com.google.osdetector'
}

configurations {
	assembly
}

dependencies {
	assembly project
}

def dist = tasks.register('distribution', Zip) {
	group = "distribution"
	archiveBaseName = "grafikon"
	archiveVersion = scmVersion.shortVersion
	destinationDirectory = file("${buildDir}/dist")
	from configurations.assembly
	from file("${projectDir}/src/main/deployment/scripts")
	rename "grafikon-start.*", "grafikon.jar"
}

tasks.register('unzippedDistribution', Sync) {
	group = "distribution"
	dependsOn dist
	from zipTree(dist.get().archiveFile)
	into "${buildDir}/unzipped-dist"
}

tasks.register('jpackageImageZip', Zip) {
	group = "distribution"
	archiveBaseName = "grafikon"
	archiveVersion = scmVersion.shortVersion
	archiveClassifier = osdetector.classifier
	destinationDirectory = file("${buildDir}/jpackage-zip")
	dependsOn tasks.named('jpackageImage')
	from file("${buildDir}/jpackage/grafikon")
}

ext {
	gMainClass = 'net.parostroj.timetable.gui.Main'
}

tasks.register('runMain', JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = gMainClass
}

dependencies {
	implementation project(':grafikon-gui')
	implementation project(':grafikon-save')
	implementation project(':grafikon-templates')

	runtimeOnly project(':grafikon-ls')
	runtimeOnly project(':grafikon-ls4')

	implementation 'org.apache.logging.log4j:log4j-slf4j-impl'
	implementation 'org.apache.logging.log4j:log4j-core'
	implementation 'org.glassfish.jaxb:jaxb-runtime'
}

tasks.named('jar').configure {
	manifest {
		attributes(
			'Main-Class': gMainClass,
			'Class-Path' : configurations.runtimeClasspath.files.collect { file -> file.name }.join(' ')
		)
	}
}

application {
	mainClass = gMainClass
	applicationName = 'grafikon'
}

tasks.named('distZip').configure { enabled = false }
tasks.named('distTar').configure { enabled = false }

runtime {
	options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
	modules = ['java.xml', 'java.desktop', 'java.logging', 'java.scripting', 'java.management',
			'jdk.xml.dom', 'java.naming', 'jdk.zipfs']
	launcher {
		noConsole = true
	}
	jpackage {
		imageName = 'grafikon'
		installerName = 'grafikon'
		if (osdetector.os == 'windows') {
			appVersion = project.findProperty('appVersion') ?: scmVersion.baseVersion
			installerOptions = ['--win-dir-chooser', '--win-menu']
			imageOptions = ['--icon', 'src/main/deployment/icons/grafikon.ico']
			installerType = project.findProperty('installerType') ?: 'msi'
		} else if (osdetector.os == 'linux') {
			appVersion = project.findProperty('appVersion') ?: scmVersion.shortVersion
			installerOptions = ['--linux-shortcut']
			imageOptions = ['--icon', 'src/main/deployment/icons/grafikon.png']
			installerType = project.findProperty('installerType') ?: 'deb'
		}
	}
}
