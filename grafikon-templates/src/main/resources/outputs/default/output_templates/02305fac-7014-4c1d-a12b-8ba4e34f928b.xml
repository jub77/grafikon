<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<library_item type="OUTPUT_TEMPLATE">
    <attributes/>
    <output_template>
        <id>02305fac-7014-4c1d-a12b-8ba4e34f928b</id>
        <template>
            <template>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;%
COLUMN_COUNT = settings['columns']
FONT_SIZE = settings['font.size']

class Station {
    String name
    String number
    Map&lt;String, String&gt; telephones = [:]
}

def filterStations() {
    List&lt;Station&gt; stations = []
    Map&lt;String, String&gt; telephones = [:]
    for (node in diagram.net.nodes) {
        if (node.telephone) {
            telephones[node.name] = node.telephone
        }
    }
    telephones.each { name, telephone -&gt;
        Station s = new Station(name: name, number: telephone)
        s.telephones.putAll(telephones)
        s.telephones.remove(name)
        stations &lt;&lt; s
    }
    return stations
}
%&gt;

&lt;root xmlns="http://www.w3.org/1999/XSL/Format"&gt;
&lt;layout-master-set&gt;
  &lt;simple-page-master master-name="simpleA4" page-height="29.7cm" page-width="21cm" margin="1cm 1cm 1cm 1cm"
      line-stacking-strategy="font-height" line-height-shift-adjustment="disregard-shifts"&gt;
    &lt;region-body /&gt;
  &lt;/simple-page-master&gt;
&lt;/layout-master-set&gt;
&lt;page-sequence master-reference="simpleA4" font-family="SansCondensed"&gt;
  &lt;flow flow-name="xsl-region-body"&gt;
  &lt;% printStations(filterStations()) %&gt;
  &lt;/flow&gt;
&lt;/page-sequence&gt;
&lt;/root&gt;
&lt;%
def printStations(stations) {
  Iterator iterator = stations.iterator();
//  count = 0;
  while(true) {
%&gt;
&lt;block font-size="3mm"&gt;
&lt;table border-collapse="separate" border-separation=".2mm" table-layout="fixed" width="100%"&gt;
&lt;% for (ind in 1..COLUMN_COUNT) { %&gt;
    &lt;table-column column-width="${100/COLUMN_COUNT}%"/&gt;
&lt;% } %&gt;
    &lt;table-body&gt;
        &lt;table-row keep-together.within-page="always"&gt;&lt;%
      countInRow = 0;
      c = null;
      while (true) {
        if (iterator.hasNext()) {
          c = iterator.next();
        } else {
          c = null;
        }
        if (c != null) {
          %&gt;
    &lt;table-cell padding=".5mm .5mm .5mm .5mm"&gt;
      &lt;% printStation(c) %&gt;
    &lt;/table-cell&gt;&lt;%
        } else {
          %&gt;
    &lt;table-cell&gt;&lt;block&gt;&lt;/block&gt;&lt;/table-cell&gt;&lt;%
        }
        countInRow++;
        if (countInRow == COLUMN_COUNT)
          break;
      }
    %&gt;
    &lt;/table-row&gt;
    &lt;/table-body&gt;
&lt;/table&gt;
&lt;/block&gt;
&lt;%
    if (!iterator.hasNext())
      break;
  }
}

def printStation(st) {
    def collator = util.getCollator(locale)
    def sortedNames = (st.telephones.keySet() as List).sort{a,b -&gt; collator.compare(a, b)}
%&gt;
&lt;block&gt;
&lt;table border-collapse="collapse" table-layout="fixed" width="100%" border="solid .3mm black"&gt;
    &lt;table-column column-width="70%" /&gt;
    &lt;table-column column-width="30%" /&gt;
    &lt;table-body&gt;
        &lt;table-row font-size="${FONT_SIZE*1.2}mm"&gt;
          &lt;table-cell number-columns-spanned="2" font-weight="bold" border="solid .3mm black" padding=".4mm .6mm 0mm 0.6mm"&gt;&lt;block text-align-last="justify"&gt;${st.name}&lt;leader leader-pattern="space" /&gt;${st.number}&lt;/block&gt;&lt;/table-cell&gt;
        &lt;/table-row&gt;
        &lt;% 
           for (name in sortedNames) {
        %&gt;
        &lt;table-row&gt;
          &lt;table-cell font-size="${FONT_SIZE}mm" border="solid .3mm black" padding=".4mm .6mm 0mm 0.6mm"&gt;&lt;block-container overflow="hidden"&gt;&lt;block&gt;${name}&lt;/block&gt;&lt;/block-container&gt;&lt;/table-cell&gt;
          &lt;table-cell font-size="${FONT_SIZE}mm" border="solid .3mm black" padding=".4mm .6mm 0mm 0.6mm"&gt;&lt;block&gt;${st.telephones[name]}&lt;/block&gt;&lt;/table-cell&gt;
        &lt;/table-row&gt;
        &lt;% } %&gt;
    &lt;/table-body&gt;
&lt;/table&gt;
&lt;/block&gt;&lt;%
}
%&gt;
</template>
            <language>GROOVY</language>
        </template>
        <attachment name="arrow_seq_pdf.svg" type="BINARY">
            <binaryData>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+DQoNCjxzdmcNCiAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyINCiAgIHZlcnNpb249IjEuMSINCiAgIHdpZHRoPSIxMDYuMjk5MjEiDQogICBoZWlnaHQ9IjIxMi41OTg0MiINCiAgIGlkPSJjYXJkLWFycm93Ij4NCiAgPGRlZnMNCiAgICAgaWQ9ImRlZnMzMDAwIiAvPg0KICA8Zw0KICAgICB0cmFuc2Zvcm09Im1hdHJpeCgwLjczNzA5ODcyLDAsMCwwLjczNzA5ODcyLC04LjE1OTQwMDQsLTU2MC40OTc5NCkiDQogICAgIGlkPSJsYXllcjEiDQogICAgIHN0eWxlPSJzdHJva2U6I2JiYmJiYjtzdHJva2Utb3BhY2l0eToxIj4NCiAgICA8cGF0aA0KICAgICAgIGQ9Ik0gMTQyLjA2LDkxOS4yNSBDIDEzOC4xOSw4NjcuNjggOTUuMDM1LDgyOC4xMyAyNC40OSw4MjYuMTkgbCAtMC4yMzU2LC01Mi41NCBjIDM4LjA4MiwtMC4wMTU2IDExNi42NywxOS44MDUgMTE3LjgsOTMuMjk5IHYgNDguNzcgYyAwLjMxMzkzLDU3LjM1OSAtNDIuNTI0LDc5LjM2NSAtNzguOTI3LDk0LjAwNiB2IDI1LjY4MSBsIC0zOS4xMSwtNDcuNTkyIDM5LjExLC02Mi42NzQgdiAzMC4xNiBjIDM0LjgzMiwtMTEuNzY4IDYwLjEsLTI3LjI1IDczLjc0NCwtNjAuNTUiDQogICAgICAgaWQ9InBhdGg0Ig0KICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiNiYmJiYmI7c3Ryb2tlLXdpZHRoOjMuMzEzNDQ5Mzg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1kYXNoYXJyYXk6bm9uZSIgLz4NCiAgPC9nPg0KPC9zdmc+DQo=</binaryData>
        </attachment>
        <attributes>
            <attribute>
                <key>name</key>
                <type>localized.string</type>
                <value type="string">Telephones</value>
                <value type="string.cs">Telefony</value>
            </attribute>
            <attribute>
                <key>key</key>
                <value type="string">telephones</value>
            </attribute>
            <attribute>
                <key>output.type</key>
                <value type="string">diagram</value>
            </attribute>
            <attribute>
                <key>output</key>
                <value type="string">pdf.groovy</value>
            </attribute>
            <attribute>
                <key>description</key>
                <type>localized.string</type>
                <value type="string">PDF: Telephones</value>
                <value type="string.cs">PDF: Telefony</value>
            </attribute>
            <attribute>
                <key>columns</key>
                <type>localized.string</type>
                <value type="string">Columns</value>
                <value type="string.cs">Sloupce</value>
                <category>localization</category>
            </attribute>
            <attribute>
                <key>font.size</key>
                <type>localized.string</type>
                <value type="string">Font size (mm)</value>
                <value type="string.cs">Velikost p√≠sma (mm)</value>
                <category>localization</category>
            </attribute>
            <attribute>
                <key>columns</key>
                <value type="integer">5</value>
                <category>settings</category>
            </attribute>
            <attribute>
                <key>font.size</key>
                <value type="double">3.0</value>
                <category>settings</category>
            </attribute>
        </attributes>
    </output_template>
</library_item>
