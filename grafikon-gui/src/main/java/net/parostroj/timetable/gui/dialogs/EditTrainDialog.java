/*
 * EditTrainDialog.java
 *
 * Created on 18. září 2007, 14:47
 */
package net.parostroj.timetable.gui.dialogs;

import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import net.parostroj.timetable.gui.ApplicationModel;
import net.parostroj.timetable.gui.ApplicationModelEvent;
import net.parostroj.timetable.gui.ApplicationModelEventType;
import net.parostroj.timetable.model.GrafikonException;
import net.parostroj.timetable.model.Language;
import net.parostroj.timetable.model.Node;
import net.parostroj.timetable.model.TextTemplate;
import net.parostroj.timetable.model.Train;
import net.parostroj.timetable.model.TrainType;
import net.parostroj.timetable.utils.ResourceLoader;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Dialog for editation of train properties.
 *
 * @author jub
 */
public class EditTrainDialog extends javax.swing.JDialog {

    private static final Logger LOG = LoggerFactory.getLogger(EditTrainDialog.class.getName());

    public ApplicationModel model;

    /**
     * Creates new form EditTrainDialog.
     *
     * @param parent
     * @param modal
     */
    public EditTrainDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        routeEditBox.setLanguages(Arrays.asList(Language.values()));
    }

    /**
     * fills the dialog with train data.
     */
    public void getSelectedTrainData() {
        if (model != null && model.getSelectedTrain() != null)  {
            Train train = model.getSelectedTrain();
            // model for train types
            typeComboBox.setModel(new DefaultComboBoxModel(model.getDiagram().getTrainTypes().toArray()));
            typeComboBox.setSelectedItem(train.getType());
            dieselCheckBox.setSelected((Boolean)train.getAttribute("diesel"));
            electricCheckBox.setSelected((Boolean)train.getAttribute("electric"));
            showLengthCheckBox.setSelected(Boolean.TRUE.equals(train.getAttribute("show.station.length")));
            if (train.getType().getCategory().getKey().equals("freight")) {
                emptyCheckBox.setEnabled(true);
                emptyCheckBox.setSelected(Boolean.TRUE.equals(train.getAttribute("empty")));
            } else {
                emptyCheckBox.setEnabled(false);
                emptyCheckBox.setSelected(false);
            }

            numberTextField.setText(train.getNumber());

            descriptionTextField.setText(train.getDescription());
            speedTextField.setText(Integer.toString(train.getTopSpeed()));
            Integer weight = (Integer) train.getAttribute("weight");
            weightTextField.setText(weight != null ? weight.toString() : "");
            routeEditBox.setTemplate((TextTemplate) train.getAttribute("route"));

            fromNodeButton.setText(((Node) train.getFirstInterval().getOwner()).getName());
            toNodeButton.setText(((Node) train.getLastInterval().getOwner()).getName());

            timeBeforeTextField.setText(Integer.toString(train.getTimeBefore() / 60));
            timeAfterTextField.setText(Integer.toString(train.getTimeAfter() / 60));
        }
    }

    public void setModel(ApplicationModel model) {
        this.model = model;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox();
        dieselCheckBox = new javax.swing.JCheckBox();
        electricCheckBox = new javax.swing.JCheckBox();
        showLengthCheckBox = new javax.swing.JCheckBox();
        emptyCheckBox = new javax.swing.JCheckBox();
        numberTextField = new javax.swing.JTextField();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        descriptionTextField = new javax.swing.JTextField();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        speedTextField = new javax.swing.JTextField();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        weightTextField = new javax.swing.JTextField();
        routeEditBox = new net.parostroj.timetable.gui.components.TextTemplateEditBox();
        fromNodeButton = new javax.swing.JButton();
        toNodeButton = new javax.swing.JButton();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        timeBeforeTextField = new javax.swing.JTextField();
        timeAfterTextField = new javax.swing.JTextField();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel9 = new javax.swing.JLabel();
        javax.swing.JButton okButton = new javax.swing.JButton();
        javax.swing.JButton cancelButton = new javax.swing.JButton();
        javax.swing.JLabel jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(ResourceLoader.getString("edit.train")); // NOI18N

        jLabel1.setText(ResourceLoader.getString("create.train.type")); // NOI18N

        dieselCheckBox.setText(ResourceLoader.getString("create.train.diesel")); // NOI18N
        dieselCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        dieselCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        electricCheckBox.setText(ResourceLoader.getString("create.train.electric")); // NOI18N
        electricCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        electricCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        showLengthCheckBox.setText(ResourceLoader.getString("create.train.show.station.length")); // NOI18N
        showLengthCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        showLengthCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        emptyCheckBox.setText(ResourceLoader.getString("create.train.empty")); // NOI18N
        emptyCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        emptyCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        numberTextField.setColumns(20);

        jLabel2.setText(ResourceLoader.getString("create.train.number")); // NOI18N

        descriptionTextField.setColumns(30);

        jLabel3.setText(ResourceLoader.getString("create.train.description")); // NOI18N

        speedTextField.setColumns(10);

        jLabel4.setText(ResourceLoader.getString("create.train.speed")); // NOI18N

        fromNodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromNodeButtonActionPerformed(evt);
            }
        });

        toNodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toNodeButtonActionPerformed(evt);
            }
        });

        jLabel5.setText(ResourceLoader.getString("edit.train.weight")); // NOI18N

        jLabel6.setText(ResourceLoader.getString("edit.train.route")); // NOI18N

        timeBeforeTextField.setColumns(6);

        timeAfterTextField.setColumns(6);

        jLabel7.setText(ResourceLoader.getString("create.train.technological.time")); // NOI18N

        jLabel8.setText(ResourceLoader.getString("create.train.time.before")); // NOI18N

        jLabel9.setText(ResourceLoader.getString("create.train.time.after")); // NOI18N

        okButton.setText(ResourceLoader.getString("button.ok")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(ResourceLoader.getString("button.cancel")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel10.setText(ResourceLoader.getString("edit.train.insert.node")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fromNodeButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(toNodeButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dieselCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(electricCheckBox))
                            .addComponent(emptyCheckBox)
                            .addComponent(descriptionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addComponent(speedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(weightTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addComponent(showLengthCheckBox)
                            .addComponent(numberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addComponent(typeComboBox, 0, 244, Short.MAX_VALUE)
                            .addComponent(routeEditBox, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeBeforeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeAfterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dieselCheckBox)
                    .addComponent(electricCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showLengthCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emptyCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(numberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(speedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(routeEditBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(toNodeButton)
                                    .addComponent(fromNodeButton))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(timeBeforeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(timeAfterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    this.setVisible(false);
}//GEN-LAST:event_cancelButtonActionPerformed

private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    Train train = model.getSelectedTrain();
    // set values to train ...
    if (train.getType() != typeComboBox.getSelectedItem())
        train.setType((TrainType)typeComboBox.getSelectedItem());
    if (!train.getAttribute("diesel").equals(dieselCheckBox.isSelected()))
        train.setAttribute("diesel", dieselCheckBox.isSelected());
    if (!train.getAttribute("electric").equals(electricCheckBox.isSelected()))
        train.setAttribute("electric", electricCheckBox.isSelected());
    if (showLengthCheckBox.isSelected() && !Boolean.TRUE.equals(train.getAttribute("show.station.length")))
        train.setAttribute("show.station.length", Boolean.TRUE);
    else if (!showLengthCheckBox.isSelected())
        train.removeAttribute("show.station.length");
    if (emptyCheckBox.isSelected() && !Boolean.TRUE.equals(train.getAttribute("empty")))
        train.setAttribute("empty", Boolean.TRUE);
    else if (!emptyCheckBox.isSelected())
        train.removeAttribute("empty");
    if (!numberTextField.getText().equals(train.getNumber()))
        train.setNumber(numberTextField.getText());
    if (!descriptionTextField.getText().equals(train.getDescription()))
        train.setDescription(descriptionTextField.getText());

    // weight
    Integer oldWI = (Integer) train.getAttribute("weight");
    Integer newWI = null;
    try {
        String weightStr = weightTextField.getText().trim();
        if (!"".equals(weightStr))
            newWI = Integer.valueOf(weightStr);
    } catch (NumberFormatException e) {
        LOG.warn("Couldn't convert weight to int.");
        newWI = oldWI;
    }
    if (newWI != null && !newWI.equals(oldWI)) {
        train.setAttribute("weight", newWI);
    } else if (newWI == null && oldWI != null)
        train.removeAttribute("weight");

    // route
    try {
        TextTemplate newRI = routeEditBox.getTemplateEmpty();
        TextTemplate oldRI = (TextTemplate) train.getAttribute("route");
        if ((oldRI != null && !oldRI.equals(newRI)) ||
                (oldRI == null && newRI != null))
            train.setAttribute("route", newRI);
        else if (oldRI != null && newRI == null)
            train.removeAttribute("route");
    } catch (GrafikonException e) {
        LOG.warn("Error creating template: {}", e.getMessage());
    }

    boolean changed = false;
    // check max speed - modify if changed
    try {
        int maxSpeed = Integer.parseInt(speedTextField.getText());
        if (maxSpeed != train.getTopSpeed() && maxSpeed > 0) {
            // modify top speed
            train.setTopSpeed(maxSpeed);
            train.recalculate(maxSpeed);
            // fire event
            changed = true;
        }
        if (maxSpeed <= 0)
            LOG.warn("Speed has to be positive number: {}", maxSpeed);
    } catch (NumberFormatException e) {
        LOG.warn("Cannot convert speed to number: {}", speedTextField.getText());
    }

    // technological times
    try {
        int timeBefore = Integer.parseInt(timeBeforeTextField.getText()) * 60;
        int timeAfter = Integer.parseInt(timeAfterTextField.getText()) * 60;
        if (timeBefore != train.getTimeBefore()) {
            train.setTimeBefore(timeBefore);
            changed = true;
        }
        if (timeAfter != train.getTimeAfter()) {
            train.setTimeAfter(timeAfter);
            changed = true;
        }
    } catch (NumberFormatException e) {
        LOG.warn("Cannot convert technological time: {}, {}", timeBeforeTextField.getText(), timeAfterTextField.getText());
    }

    // fire changed event
    if (changed)
        model.fireEvent(new ApplicationModelEvent(ApplicationModelEventType.MODIFIED_TRAIN, model, train));
    // fire event
    model.fireEvent(new ApplicationModelEvent(ApplicationModelEventType.MODIFIED_TRAIN_NAME_TYPE, model, train));

    this.setVisible(false);
}//GEN-LAST:event_okButtonActionPerformed

private void fromNodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromNodeButtonActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_fromNodeButtonActionPerformed

private void toNodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toNodeButtonActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_toNodeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JCheckBox dieselCheckBox;
    private javax.swing.JCheckBox electricCheckBox;
    private javax.swing.JCheckBox emptyCheckBox;
    private javax.swing.JButton fromNodeButton;
    private javax.swing.JTextField numberTextField;
    private net.parostroj.timetable.gui.components.TextTemplateEditBox routeEditBox;
    private javax.swing.JCheckBox showLengthCheckBox;
    private javax.swing.JTextField speedTextField;
    private javax.swing.JTextField timeAfterTextField;
    private javax.swing.JTextField timeBeforeTextField;
    private javax.swing.JButton toNodeButton;
    private javax.swing.JComboBox typeComboBox;
    private javax.swing.JTextField weightTextField;
    // End of variables declaration//GEN-END:variables

}
