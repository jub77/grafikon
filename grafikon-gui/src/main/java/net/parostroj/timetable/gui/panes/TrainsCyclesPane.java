/*
 * EngineCyclesPane.java
 *
 * Created on 12. září 2007, 13:33
 */
package net.parostroj.timetable.gui.panes;

import java.awt.Color;
import net.parostroj.timetable.gui.ApplicationModel;
import net.parostroj.timetable.gui.ApplicationModelEvent;
import net.parostroj.timetable.gui.ApplicationModelListener;
import net.parostroj.timetable.gui.components.GraphicalTimetableView.TrainColors;
import net.parostroj.timetable.gui.components.HighlightedTrains;
import net.parostroj.timetable.gui.components.TrainColorChooser;
import net.parostroj.timetable.gui.components.TrainSelector;
import net.parostroj.timetable.gui.views.TCDelegate;
import net.parostroj.timetable.model.TimeInterval;
import net.parostroj.timetable.model.TrainsCycle;

/**
 * Pane for manipulating engine cycles.
 *
 * @author jub
 */
public class TrainsCyclesPane extends javax.swing.JPanel {

    private TCDelegate delegate;

    private class HighligterAndSelector implements HighlightedTrains, TrainSelector, TrainColorChooser, ApplicationModelListener {

        private TrainColorChooser chooserDelegate;
        private TrainSelector selectorDelegate;

        public HighligterAndSelector(TrainColorChooser chooser, TrainSelector selector) {
            this.chooserDelegate = chooser;
            this.selectorDelegate = selector;
        }
        private TrainsCycle last;

        @Override
        public boolean isHighlighedInterval(TimeInterval interval) {
            TimeInterval selectedInterval = selectorDelegate.getSelectedTrainInterval();
            if (selectedInterval == null)
                return false;
            else
                return selectedInterval.getTrain() == interval.getTrain();
        }

        @Override
        public void modelChanged(ApplicationModelEvent event) {
            if (delegate.transformEventType(event.getType()) == TCDelegate.Action.SELECTED_CHANGED) {
                last = delegate.getSelectedCycle(event.getModel());
                graphicalTimetableView.repaint();
            } else if (delegate.transformEventType(event.getType()) == TCDelegate.Action.MODIFIED_CYCLE) {
                if (event.getObject() == last) {
                    graphicalTimetableView.repaint();
                }
            }
        }

        @Override
        public Color getColor() {
            return Color.GREEN;
        }

        @Override
        public void selectTrainInterval(TimeInterval interval) {
            selectorDelegate.selectTrainInterval(interval);
            graphicalTimetableView.repaint();
        }

        @Override
        public TimeInterval getSelectedTrainInterval() {
            return selectorDelegate.getSelectedTrainInterval();
        }

        @Override
        public Color getIntervalColor(TimeInterval interval) {
            if (last != null && interval.getTrain().isCovered(last, interval)) {
                return Color.RED;
            }
            return chooserDelegate.getIntervalColor(interval);
        }
    }

    /** Creates new form EngineCyclesPane */
    public TrainsCyclesPane() {
        initComponents();
        scrollPane.getHorizontalScrollBar().setBlockIncrement(1000);
        scrollPane.getHorizontalScrollBar().setUnitIncrement(100);
    }

    public void setModel(final ApplicationModel model, final TCDelegate delegate, TrainColorChooser chooser) {
        this.delegate = delegate;
        HighligterAndSelector hts = new HighligterAndSelector(chooser, eCTrainListView);
        eCListView.setModel(model, delegate);
        eCDetailsView.setModel(model, delegate);
        eCTrainListView.setModel(model, delegate);
        model.addListener(new ApplicationModelListener() {

            @Override
            public void modelChanged(ApplicationModelEvent event) {
                switch (event.getType()) {
                    case SET_DIAGRAM_CHANGED:
                        graphicalTimetableView.setTrainDiagram(model.getDiagram());
                        break;
                    default:
                        // nothing
                        break;
                }
            }
        });
        graphicalTimetableView.setTrainColors(TrainColors.BY_COLOR_CHOOSER, hts);
        model.addListener(hts);
        graphicalTimetableView.setHTrains(hts);
        graphicalTimetableView.setTrainSelector(hts);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eCListView = new net.parostroj.timetable.gui.views.TCListView();
        eCDetailsView = new net.parostroj.timetable.gui.views.TCDetailsView2();
        eCTrainListView = new net.parostroj.timetable.gui.views.TCTrainListView();
        scrollPane = new javax.swing.JScrollPane();
        graphicalTimetableView = new net.parostroj.timetable.gui.components.GraphicalTimetableViewWithSave();

        javax.swing.GroupLayout graphicalTimetableViewLayout = new javax.swing.GroupLayout(graphicalTimetableView);
        graphicalTimetableView.setLayout(graphicalTimetableViewLayout);
        graphicalTimetableViewLayout.setHorizontalGroup(
            graphicalTimetableViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4000, Short.MAX_VALUE)
        );
        graphicalTimetableViewLayout.setVerticalGroup(
            graphicalTimetableViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 137, Short.MAX_VALUE)
        );

        scrollPane.setViewportView(graphicalTimetableView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(eCDetailsView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eCListView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eCTrainListView, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eCDetailsView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eCListView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(eCTrainListView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private net.parostroj.timetable.gui.views.TCDetailsView2 eCDetailsView;
    private net.parostroj.timetable.gui.views.TCListView eCListView;
    private net.parostroj.timetable.gui.views.TCTrainListView eCTrainListView;
    private net.parostroj.timetable.gui.components.GraphicalTimetableViewWithSave graphicalTimetableView;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
}
