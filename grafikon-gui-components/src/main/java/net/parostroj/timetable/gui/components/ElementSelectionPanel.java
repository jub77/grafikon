/*
 * ElementSelectionPanel.java
 *
 * Created on 21.9.2009, 10:44:19
 */
package net.parostroj.timetable.gui.components;

import java.util.ArrayList;
import java.util.List;
import net.parostroj.timetable.gui.helpers.Wrapper;
import net.parostroj.timetable.gui.helpers.WrapperListModel;

/**
 * Panel for elements selection.
 *
 * @author jub
 */
public class ElementSelectionPanel<T> extends javax.swing.JPanel {

    private WrapperListModel<T> leftListModel;
    private WrapperListModel<T> rightListModel;

    /** Creates new form ElementSelectionPanel */
    public ElementSelectionPanel() {
        leftListModel = new WrapperListModel<T>();
        rightListModel = new WrapperListModel<T>();
        initComponents();
    }

    public void setListForSelection(List<Wrapper<T>> list) {
        leftListModel.setListOfWrappers(list);
        rightListModel.setListOfWrappers(new ArrayList<Wrapper<T>>());
    }

    public List<Wrapper<T>> getSelectedList() {
        return rightListModel.getListOfWrappers();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JScrollPane scrollPane1 = new javax.swing.JScrollPane();
        leftList = new javax.swing.JList();
        moveRightButton = new javax.swing.JButton();
        moveLeftButton = new javax.swing.JButton();
        javax.swing.JScrollPane scrollPane2 = new javax.swing.JScrollPane();
        rightList = new javax.swing.JList();

        leftList.setModel(leftListModel);
        scrollPane1.setViewportView(leftList);

        moveRightButton.setText(">>");
        moveRightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveRightButtonActionPerformed(evt);
            }
        });

        moveLeftButton.setText("<<");
        moveLeftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveLeftButtonActionPerformed(evt);
            }
        });

        rightList.setModel(rightListModel);
        scrollPane2.setViewportView(rightList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(moveRightButton)
                    .addComponent(moveLeftButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(moveRightButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(moveLeftButton)
                .addContainerGap(80, Short.MAX_VALUE))
            .addComponent(scrollPane1)
            .addComponent(scrollPane2)
        );
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("unchecked")
    private void moveLeftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveLeftButtonActionPerformed
        // get selected elements and move them
        Object[] values = rightList.getSelectedValues();
        for (Object o : values) {
            if (o instanceof Wrapper<?>) {
                Wrapper w = (Wrapper)o;
                rightListModel.removeWrapper(w);
                leftListModel.addWrapper(w);
            }
        }
    }//GEN-LAST:event_moveLeftButtonActionPerformed

    @SuppressWarnings("unchecked")
    private void moveRightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveRightButtonActionPerformed
        // get selected elements and move them
        Object[] values = leftList.getSelectedValues();
        for (Object o : values) {
            if (o instanceof Wrapper) {
                Wrapper w = (Wrapper)o;
                leftListModel.removeWrapper(w);
                rightListModel.addWrapper(w);
            }
        }
    }//GEN-LAST:event_moveRightButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList leftList;
    private javax.swing.JButton moveLeftButton;
    private javax.swing.JButton moveRightButton;
    private javax.swing.JList rightList;
    // End of variables declaration//GEN-END:variables

}
