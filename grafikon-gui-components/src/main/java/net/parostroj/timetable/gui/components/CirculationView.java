/*
 * CirculationView.java
 *
 * Created on 22.6.2011, 13:44:02
 */
package net.parostroj.timetable.gui.components;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.geom.Rectangle2D;
import java.util.Collection;

import net.parostroj.timetable.model.TrainDiagram;
import net.parostroj.timetable.model.TrainsCycle;
import net.parostroj.timetable.model.TrainsCycleType;

/**
 * View with circulations of certain type.
 *
 * @author jub
 */
public class CirculationView extends javax.swing.JPanel {

    private static String TYPE = TrainsCycleType.DRIVER_CYCLE; 

    private TrainDiagram diagram;
    private int count = 0;
    private Dimension charSize = null;

    /** Creates new form CirculationView */
    public CirculationView() {
        initComponents();
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        if (diagram != null) {
            paintCirculations((Graphics2D) g, diagram.getCycles(TYPE));
        }
    }

    public void setDiagram(TrainDiagram diagram) {
        this.diagram = diagram;
        this.repaintAndUpdateSize();
    }
    
    private void paintCirculations(Graphics2D g, Collection<TrainsCycle> circulations) {
            int start = 0;
            for (TrainsCycle circulation : circulations) {
                start += charSize.height;
                paintCirculation(g, circulation, new Point(charSize.width, start));
            }
    }
    
    private void paintCirculation(Graphics2D g, TrainsCycle circulation, Point position) {
        g.drawString(circulation.getName(), position.x, position.y);
    }
    
    private void repaintAndUpdateSize() {
        int newCount;
        if (diagram == null) {
            newCount = 0;
        } else {
            newCount = diagram.getCycles(TYPE).size();
        }
        if (newCount != count) {
            count = newCount;
            this.revalidate();
        }
        this.repaint();
    }
    
    @Override
    public Dimension getPreferredSize() {
        if (charSize == null) {
            Graphics2D g = (Graphics2D) this.getGraphics();
            Rectangle2D bounds = g.getFont().getStringBounds("M", g.getFontRenderContext());
            charSize = new Dimension((int)bounds.getWidth(), (int)bounds.getHeight());
        }
        return new Dimension(100, charSize.height * count);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void circulationRemoved(TrainsCycle circulation) {
        this.repaintAndUpdateSize();
    }

    public void circulationAdded(TrainsCycle circulation) {
        this.repaintAndUpdateSize();
    }

    public void circulationUpdated(TrainsCycle circulation) {
        this.repaintAndUpdateSize();
    }
}
