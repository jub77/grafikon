plugins {
	id 'io.spring.dependency-management' apply false
	id 'net.parostroj.versioning' apply false
	id 'com.github.ben-manes.versions'
}

def nonJavaProjectsFilter = [
	"grafikon-assembly",
	"grafikon-webstart"
]

subprojects { prj ->
	apply plugin: 'net.parostroj.versioning'
	apply plugin: 'io.spring.dependency-management'

	group = 'net.parostroj'
	version = scmVersion.projectVersion

	repositories {
		mavenLocal()
		mavenCentral()
		maven { url 'https://jitpack.io' }
		maven { url 'https://repository.jboss.org/nexus/content/repositories/thirdparty-releases' }
	}

	dependencyManagement {
		dependencies {
			dependency 'org.jgrapht:jgrapht-core:1.4.0'
			dependency 'org.mvel:mvel2:2.4.7.Final'
			dependency 'org.codehaus.groovy:groovy-templates:3.0.3'
			dependency 'org.codehaus.groovy:groovy-jsr223:3.0.3'
			dependency 'org.slf4j:slf4j-api:1.7.30'
			dependency 'org.slf4j:jcl-over-slf4j:1.7.30'
			dependency 'joda-time:joda-time:2.10.6'
			dependency 'com.google.guava:guava:29.0-jre', {
				exclude 'com.google.code.findbugs:jsr305'
				exclude 'com.google.j2objc:j2objc-annotations'
				exclude 'com.google.errorprone:error_prone_annotations'
				exclude 'org.codehaus.mojo:animal-sniffer-annotations'
				exclude 'org.checkerframework:checker-compat-qual'
				exclude 'org.checkerframework:checker-qual'
				exclude 'com.google.guava:failureaccess'
				exclude 'com.google.guava:listenablefuture'
			}
			dependency 'org.apache.xmlgraphics:fop:2.5', {
				exclude 'org.apache.xmlgraphics:batik-extension'
				exclude 'commons-logging:commons-logging'
				exclude 'org.apache.pdfbox:fontbox'
				exclude 'xalan:xalan'
				exclude 'xml-apis:xml-apis'
				exclude 'javax.servlet:servlet-api'
				exclude 'org.apache.xmlgraphics:fop-events'
				exclude 'org.apache.xmlgraphics:fop-util'
				exclude 'org.apache.ant:ant'
				exclude 'javax.media:jai-core'
				exclude 'com.sun.media:jai-codec'
			}
			dependency 'org.beanfabrics:beanfabrics-swing:1.4.3'
			dependency 'org.swinglabs:jxlayer:3.0.4'
			dependency 'com.fifesoft:rsyntaxtextarea:3.1.1'
			dependency 'org.ini4j:ini4j:0.5.4'
			dependency 'com.github.jgraph:jgraphx:4.0.6'
			dependency 'com.github.markusbernhardt:proxy-vole:1.0.5'
			dependency 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'
			dependency 'org.apache.logging.log4j:log4j-core:2.13.3'
			dependency 'com.github.zafarkhaja:java-semver:0.9.0'
			dependency 'org.glassfish.jaxb:jaxb-runtime:2.3.3', {
				exclude 'com.sun.xml.fastinfoset:FastInfoset'
				exclude 'org.glassfish.jaxb:txw2'
				exclude 'org.jvnet.staxex:stax-ex'
			}
			dependency 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3'

			dependency 'org.junit.jupiter:junit-jupiter-api:5.6.2'
			dependency 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
			dependency 'org.hamcrest:hamcrest:2.2'
			dependency 'io.projectreactor.addons:reactor-extra:3.3.3.RELEASE'
		}
	}

	if (prj.name in nonJavaProjectsFilter) {
		return
	}

	apply plugin: 'java-library'
	apply plugin: 'maven-publish'

	publishing {
		publications {
			maven(MavenPublication) {
				from components.java
				versionMapping {
					usage('java-api') {
						fromResolutionResult()
					}
					usage('java-runtime') {
						fromResolutionResult()
					}
				}
			}
		}
	}

	compileJava {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
		options.encoding = 'utf-8'
	}

	compileTestJava {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
		options.encoding = 'utf-8'
	}

	test {
		useJUnitPlatform()
	}

	jar {
		manifest {
			attributes(
				"Specification-Title": prj.name,
				"Specification-Version": scmVersion.baseVersion,
				"Implementation-Title": prj.name,
				"Implementation-Version-Short": scmVersion.shortVersion,
				"Permissions": "all-permissions"
			)
		}
	}

	project.tasks.withType(Jar) { task ->
		project.configure(task) {
			doFirst {
				manifest {
					attributes(
						"Build-Id": scmVersion.buildId,
						"Build-Time": scmVersion.buildTimestamp,
						"Implementation-Version": scmVersion.distVersion,
					)
				}
			}
		}
	}
}
