plugins {
	id 'io.spring.dependency-management' version '1.0.4.RELEASE' apply false
	id 'net.parostroj.versioning' version '1.0.0' apply false
}

def nonJavaProjectsFilter = [
	"grafikon-assembly",
	"grafikon-webstart"
]

subprojects { prj ->
	apply plugin: 'net.parostroj.versioning'
	apply plugin: 'io.spring.dependency-management'

	group = 'net.parostroj'
	version = scmVersion.projectVersion

	repositories {
		mavenLocal()
		mavenCentral()
		maven { url 'https://jitpack.io' }
	}

	def subs = {
		substitute module('net.parostroj:grafikon-model') with project(':grafikon-model')
		substitute module('net.parostroj:grafikon-save') with project(':grafikon-save')
		substitute module('net.parostroj:grafikon-ls') with project(':grafikon-ls')
		substitute module('net.parostroj:grafikon-ls4') with project(':grafikon-ls4')
		substitute module('net.parostroj:grafikon-templates') with project(':grafikon-templates')
		substitute module('net.parostroj:grafikon-output2') with project(':grafikon-output2')
		substitute module('net.parostroj:grafikon-gui-components') with project(':grafikon-gui-components')
		substitute module('net.parostroj:grafikon-gui') with project(':grafikon-gui')
		substitute module('net.parostroj:grafikon-start') with project(':grafikon-start')
	}

	configurations.all {
		resolutionStrategy {
			dependencySubstitution subs
		}
	}

	dependencyManagement {
		resolutionStrategy {
			dependencySubstitution subs
		}
		dependencies {
			dependency 'org.jgrapht:jgrapht-core:1.2.0'
			dependency 'org.mvel:mvel2:2.4.0.Final'
			dependency 'org.codehaus.groovy:groovy-all:2.4.15'
			dependency 'org.slf4j:slf4j-api:1.7.25'
			dependency 'org.slf4j:jcl-over-slf4j:1.7.25'
			dependency 'joda-time:joda-time:2.10'
			dependency 'com.google.guava:guava:26.0-jre', {
				exclude 'com.google.code.findbugs:jsr305'
				exclude 'com.google.j2objc:j2objc-annotations'
				exclude 'com.google.errorprone:error_prone_annotations'
				exclude 'org.codehaus.mojo:animal-sniffer-annotations'
				exclude 'org.checkerframework:checker-compat-qual'
				exclude 'org.checkerframework:checker-qual'
			}
			dependency 'org.apache.xmlgraphics:fop:2.3', {
				exclude 'org.apache.xmlgraphics:batik-extension'
				exclude 'commons-logging:commons-logging'
				exclude 'org.apache.pdfbox:fontbox'
				exclude 'xalan:xalan'
				exclude 'xml-apis:xml-apis'
			}
			dependency 'com.github.akarnokd:rxjava2-swing:0.3.0'
			dependency 'org.beanfabrics:beanfabrics-swing:1.4.3'
			dependency 'org.swinglabs:jxlayer:3.0.4'
			dependency 'com.fifesoft:rsyntaxtextarea:2.6.1'
			dependency 'org.ini4j:ini4j:0.5.4'
			dependency 'com.github.jgraph:jgraphx:v3.9.8'
			dependency 'com.github.markusbernhardt:proxy-vole:1.0.5', {
				exclude 'org.webjars.bower:js-beautify'
			}
			dependency 'org.apache.logging.log4j:log4j-slf4j-impl:2.10.0'
			dependency 'org.apache.logging.log4j:log4j-core:2.10.0'
			dependency 'com.github.zafarkhaja:java-semver:0.9.0'

			dependency 'junit:junit:4.12'
		}
	}

	if (prj.name in nonJavaProjectsFilter) {
		return
	}

	apply plugin: 'java'

	compileJava {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
		options.encoding = 'utf-8'
		options.compilerArgs << "-proc:none"
	}

	jar {
		manifest {
			attributes(
				"Specification-Title": prj.name,
				"Specification-Version": scmVersion.baseVersion,
				"Implementation-Title": prj.name,
				"Implementation-Version": scmVersion.distVersion,
				"Build-Id": scmVersion.buildId,
				"Build-Time": scmVersion.buildTimestamp,
				"Permissions": "all-permissions"
			)
		}
	}
}
